{"ast":null,"code":"var _jsxFileName = \"/home/naoki/harikanani.github.io/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\nimport { ThemeProvider } from \"styled-components\";\nimport { themes } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\nimport { CursorProvider } from \"react-cursor-custom\";\nimport { settings } from \"./portfolio\";\nimport ReactGA from \"react-ga\";\nfunction App() {\n  useEffect(() => {\n    if (settings.googleTrackingID) {\n      ReactGA.initialize(settings.googleTrackingID, {\n        testMode: process.env.NODE_ENV === \"test\"\n      });\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, []);\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n  const useCursor = settings.useCustomCursor;\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themes[theme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, useCursor ? /*#__PURE__*/React.createElement(CursorProvider, {\n    color: themes[theme].secondaryText,\n    ringSize: 25,\n    transitionTime: 75,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    theme: themes[theme],\n    setTheme: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Main, {\n    theme: themes[theme],\n    setTheme: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Main","ThemeProvider","themes","GlobalStyles","CursorProvider","settings","ReactGA","App","googleTrackingID","initialize","testMode","process","env","NODE_ENV","pageview","window","location","pathname","search","theme","setTheme","localStorage","getItem","useCursor","useCustomCursor","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","color","secondaryText","ringSize","transitionTime"],"sources":["/home/naoki/harikanani.github.io/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\nimport { ThemeProvider } from \"styled-components\";\nimport { themes } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\nimport { CursorProvider } from \"react-cursor-custom\";\nimport { settings } from \"./portfolio\";\nimport ReactGA from \"react-ga\";\n\nfunction App() {\n  useEffect(() => {\n    if (settings.googleTrackingID) {\n      ReactGA.initialize(settings.googleTrackingID, {\n        testMode: process.env.NODE_ENV === \"test\",\n      });\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, []);\n\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n  const useCursor = settings.useCustomCursor;\n\n  return (\n    <ThemeProvider theme={themes[theme]}>\n      <>\n        <GlobalStyles />\n        <div>\n          {useCursor ? (\n            <CursorProvider\n              color={themes[theme].secondaryText}\n              ringSize={25}\n              transitionTime={75}\n            >\n              <Main theme={themes[theme]} setTheme={setTheme} />\n            </CursorProvider>\n          ) : (\n            <Main theme={themes[theme]} setTheme={setTheme} />\n          )}\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,MAAM,QAAQ,SAAS;AAChC,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,UAAU;AAE9B,SAASC,GAAGA,CAAA,EAAG;EACbR,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,CAACG,gBAAgB,EAAE;MAC7BF,OAAO,CAACG,UAAU,CAACJ,QAAQ,CAACG,gBAAgB,EAAE;QAC5CE,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;MACrC,CAAC,CAAC;MACFP,OAAO,CAACQ,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAGF,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC;IACrE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAACuB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC;EAC3E,MAAMC,SAAS,GAAGlB,QAAQ,CAACmB,eAAe;EAE1C,oBACE3B,KAAA,CAAA4B,aAAA,CAACxB,aAAa;IAACkB,KAAK,EAAEjB,MAAM,CAACiB,KAAK,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClClC,KAAA,CAAA4B,aAAA,CAAA5B,KAAA,CAAAmC,QAAA,qBACEnC,KAAA,CAAA4B,aAAA,CAACtB,YAAY;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChBlC,KAAA,CAAA4B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGR,SAAS,gBACR1B,KAAA,CAAA4B,aAAA,CAACrB,cAAc;IACb6B,KAAK,EAAE/B,MAAM,CAACiB,KAAK,CAAC,CAACe,aAAc;IACnCC,QAAQ,EAAE,EAAG;IACbC,cAAc,EAAE,EAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEnBlC,KAAA,CAAA4B,aAAA,CAACzB,IAAI;IAACmB,KAAK,EAAEjB,MAAM,CAACiB,KAAK,CAAE;IAACC,QAAQ,EAAEA,QAAS;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnC,CAAC,gBAEjBlC,KAAA,CAAA4B,aAAA,CAACzB,IAAI;IAACmB,KAAK,EAAEjB,MAAM,CAACiB,KAAK,CAAE;IAACC,QAAQ,EAAEA,QAAS;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEhD,CACL,CACW,CAAC;AAEpB;AAEA,eAAexB,GAAG"},"metadata":{},"sourceType":"module"}