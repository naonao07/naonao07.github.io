{"ast":null,"code":"/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(1, selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length);\n  const styles = {}; // split the declaration to catch vendor prefixing\n\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key]) styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(decl.indexOf(\":\") + 1, decl.length);\n  }\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};","map":{"version":3,"sources":["src/dev-tool.ts"],"names":["insertRuleIntoDevtools","selector","block","key","substring","indexOf","length","styles","decl","split","trim","window","__STYLETRON_DEVTOOLS__","atomicMap","hydrateDevtoolsRule","cssString","id"],"mappings":"AAAA;AACA,OAAO,MAAMA,sBAAsB,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EACzD;EACA,MAAMC,GAAG,GAAGF,QAAQ,CAACG,SAATH,CACV,CADUA,EAEVA,QAAQ,CAACI,OAATJ,CAAiB,GAAjBA,CAAAA,KAA0B,CAAC,CAA3BA,GAA+BA,QAAQ,CAACI,OAATJ,CAAiB,GAAjBA,CAA/BA,GAAuDA,QAAQ,CAACK,MAFtDL,CAAZ;EAIA,MAAMM,MAAM,GAAG,CAAA,CAAf,CANyD,CAOzD;;EACA,KAAK,MAAMC,IAAX,IAAmBN,KAAK,CAACO,KAANP,CAAY,GAAZA,CAAnB,EAAqC;IACnC,IAAIM,IAAI,CAACE,IAALF,CAAAA,CAAAA,KAAgB,EAAhBA,IAAsB,CAACG,MAAM,CAACC,sBAAPD,CAA8BE,SAA9BF,CAAwCR,GAAxCQ,CAA3B,EACEJ,MAAM,CAACC,IAAI,CAACJ,SAALI,CAAe,CAAfA,EAAkBA,IAAI,CAACH,OAALG,CAAa,GAAbA,CAAlBA,CAAD,CAAND,GAA+CC,IAAI,CAACJ,SAALI,CAC7CA,IAAI,CAACH,OAALG,CAAa,GAAbA,CAAAA,GAAoB,CADyBA,EAE7CA,IAAI,CAACF,MAFwCE,CAA/CD;EAIH;EAEDI,MAAM,CAACC,sBAAPD,CAA8BE,SAA9BF,CAAwCR,GAAxCQ,CAAAA,GAA+CJ,MAA/CI;AACD,CAjBM;AAmBP,OAAO,MAAMG,mBAAmB,GAAGC,SAAS,IAAI;EAC9C,MAAMC,EAAE,GAAGD,SAAS,CAACX,SAAVW,CAAoB,CAApBA,EAAuB,CAAvBA,CAAX;EACA,MAAMb,KAAK,GAAGa,SAAS,CAACX,SAAVW,CAAoB,CAApBA,EAAuBA,SAAS,CAACT,MAAVS,GAAmB,CAA1CA,CAAd;EACAf,sBAAsB,CAACgB,EAAD,EAAKd,KAAL,CAAtBF;AACD,CAJM","sourcesContent":["/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(\n    1,\n    selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length,\n  );\n  const styles = {};\n  // split the declaration to catch vendor prefixing\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key])\n      styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(\n        decl.indexOf(\":\") + 1,\n        decl.length,\n      );\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n"]},"metadata":{},"sourceType":"module"}