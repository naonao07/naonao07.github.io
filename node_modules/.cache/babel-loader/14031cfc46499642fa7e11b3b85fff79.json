{"ast":null,"code":"const uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache = {};\nexport default function hyphenateStyleName(prop) {\n  return prop in cache ? cache[prop] : cache[prop] = prop.replace(uppercasePattern, \"-$&\").toLowerCase().replace(msPattern, \"-ms-\");\n}","map":{"version":3,"sources":["src/hyphenate-style-name.ts"],"names":["uppercasePattern","msPattern","cache","hyphenateStyleName","prop","replace","toLowerCase"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,QAAzB;AACA,MAAMC,SAAS,GAAG,MAAlB;AACA,MAAMC,KAAK,GAAG,CAAA,CAAd;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkD;EAC/D,OAAOA,IAAI,IAAIF,KAARE,GACHF,KAAK,CAACE,IAAD,CADFA,GAEFF,KAAK,CAACE,IAAD,CAALF,GAAcE,IAAI,CAChBC,OADYD,CACJJ,gBADII,EACc,KADdA,CAAAA,CAEZE,WAFYF,CAAAA,CAAAA,CAGZC,OAHYD,CAGJH,SAHIG,EAGO,MAHPA,CAFnB;AAMD","sourcesContent":["const uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache = {};\n\nexport default function hyphenateStyleName(prop: string): string {\n  return prop in cache\n    ? cache[prop]\n    : (cache[prop] = prop\n        .replace(uppercasePattern, \"-$&\")\n        .toLowerCase()\n        .replace(msPattern, \"-ms-\"));\n}\n"]},"metadata":{},"sourceType":"module"}