{"ast":null,"code":"/* eslint-disable no-console */\nconst validAnimationState = /^(from|to|\\+?(\\d*\\.)?\\d+%)(\\s*,\\s*(from|to|\\+?(\\d*\\.)?\\d+%))*$/;\nexport default function validateKeyframesObject(keyframes) {\n  let valid = true;\n  for (const animationState in keyframes) {\n    const value = keyframes[animationState];\n    if (!validAnimationState.test(animationState)) {\n      valid = false;\n      console.warn(`Warning: property \"${animationState}\" in keyframes object ${JSON.stringify(keyframes)} is not a valid. Must be \"from\", \"to\", or a percentage.`);\n    }\n    if (typeof value !== \"object\") {\n      valid = false;\n      console.warn(`Warning: value for \"${animationState}\" property in keyframes object ${JSON.stringify(keyframes)} must be an object. Instead it was a ${typeof value}.`);\n    }\n    if (!valid) {\n      console.warn(`Warning: object used as value for \"animationName\" style is invalid:`, keyframes);\n    }\n  }\n}","map":{"version":3,"sources":["src/validate-keyframes-object.ts"],"names":["validAnimationState","validateKeyframesObject","keyframes","valid","animationState","value","test","console","warn","JSON","stringify"],"mappings":"AAAA;AAEA,MAAMA,mBAAmB,GACvB,gEADF;AAGA,eAAe,SAASC,uBAAT,CAAiCC,SAAjC,EAAiD;EAC9D,IAAIC,KAAK,GAAG,IAAZ;EACA,KAAK,MAAMC,cAAX,IAA6BF,SAA7B,EAAwC;IACtC,MAAMG,KAAK,GAAGH,SAAS,CAACE,cAAD,CAAvB;IACA,IAAI,CAACJ,mBAAmB,CAACM,IAApBN,CAAyBI,cAAzBJ,CAAL,EAA+C;MAC7CG,KAAK,GAAG,KAARA;MACAI,OAAO,CAACC,IAARD,CACG,sBAAqBH,cAAe,yBAAwBK,IAAI,CAACC,SAALD,CAC3DP,SAD2DO,CAE3D,yDAHJF,CAAAA;IAKD;IACD,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;MAC7BF,KAAK,GAAG,KAARA;MACAI,OAAO,CAACC,IAARD,CACG,uBAAsBH,cAAe,kCAAiCK,IAAI,CAACC,SAALD,CACrEP,SADqEO,CAErE,wCAAuC,OAAOJ,KAAM,GAHxDE,CAAAA;IAKD;IACD,IAAI,CAACJ,KAAL,EAAY;MACVI,OAAO,CAACC,IAARD,CACG,qEADHA,EAEEL,SAFFK,CAAAA;IAID;EACF;AACF","sourcesContent":["/* eslint-disable no-console */\n\nconst validAnimationState =\n  /^(from|to|\\+?(\\d*\\.)?\\d+%)(\\s*,\\s*(from|to|\\+?(\\d*\\.)?\\d+%))*$/;\n\nexport default function validateKeyframesObject(keyframes: any) {\n  let valid = true;\n  for (const animationState in keyframes) {\n    const value = keyframes[animationState];\n    if (!validAnimationState.test(animationState)) {\n      valid = false;\n      console.warn(\n        `Warning: property \"${animationState}\" in keyframes object ${JSON.stringify(\n          keyframes,\n        )} is not a valid. Must be \"from\", \"to\", or a percentage.`,\n      );\n    }\n    if (typeof value !== \"object\") {\n      valid = false;\n      console.warn(\n        `Warning: value for \"${animationState}\" property in keyframes object ${JSON.stringify(\n          keyframes,\n        )} must be an object. Instead it was a ${typeof value}.`,\n      );\n    }\n    if (!valid) {\n      console.warn(\n        `Warning: object used as value for \"animationName\" style is invalid:`,\n        keyframes,\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}